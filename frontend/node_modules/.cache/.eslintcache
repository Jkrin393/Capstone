[{"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\index.js":"1","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\App.js":"3","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\useScanner.js":"4","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\item.js":"6","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\suppliermanagement.js":"7","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\order.js":"8","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\itemchart.js":"9","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\dashboard.js":"10","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\orderchart.js":"11","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\inventory.js":"12","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingUSPS.js":"13","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingRedirect.js":"14","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingUPS.js":"15","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\cash.js":"16","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\addressVerification\\addressVerifyUPS.js":"17"},{"size":661,"mtime":1680140836382,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1677108753022,"results":"20","hashOfConfig":"19"},{"size":2941,"mtime":1680816869103,"results":"21","hashOfConfig":"19"},{"size":1681,"mtime":1677108753006,"results":"22","hashOfConfig":"19"},{"size":10754,"mtime":1680647709942,"results":"23","hashOfConfig":"19"},{"size":13334,"mtime":1679352367015,"results":"24","hashOfConfig":"19"},{"size":9835,"mtime":1677108753022,"results":"25","hashOfConfig":"19"},{"size":8398,"mtime":1679352367015,"results":"26","hashOfConfig":"19"},{"size":3521,"mtime":1679352367015,"results":"27","hashOfConfig":"19"},{"size":47273,"mtime":1680803743071,"results":"28","hashOfConfig":"19"},{"size":4723,"mtime":1679352367015,"results":"29","hashOfConfig":"19"},{"size":13994,"mtime":1680647709946,"results":"30","hashOfConfig":"19"},{"size":2958,"mtime":1680145644647,"results":"31","hashOfConfig":"19"},{"size":1797,"mtime":1680145633886,"results":"32","hashOfConfig":"19"},{"size":1019,"mtime":1680817061668,"results":"33","hashOfConfig":"19"},{"size":7626,"mtime":1680810422520,"results":"34","hashOfConfig":"19"},{"size":2442,"mtime":1680818047449,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"56lzal",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\App.js",["98","99","100"],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\useScanner.js",["101"],[],"import {createContext, useContext, useEffect, useRef, useState} from \"react\";\r\nimport Quagga from 'quagga'\r\n\r\nconst ScannerContext = createContext();\r\n\r\nconst useScan = () => {\r\n  const [active, setActive] = useState(false);\r\n  const [callback, setCallback] = useState();\r\n  return {\r\n    active,\r\n    callback,\r\n    stop: () => {\r\n      setActive(false)\r\n    },\r\n    start: (cb) => {\r\n      setActive(true);\r\n      setCallback(() => val => cb(val));\r\n    }\r\n  }\r\n}\r\n\r\nexport const ScannerProvider = ({children}) => {\r\n  const ref = useRef();\r\n  const scan = useScan();\r\n  const {active, callback, stop} = scan;\r\n  useEffect(() => {\r\n    if (active && ref.current) {\r\n      Quagga.init({\r\n        inputStream: {\r\n          name: \"Live\",\r\n          type: \"LiveStream\",\r\n          constraints: {\r\n            width: '1090',\r\n            height: '690'\r\n          },\r\n          numberOfWorkers: navigator.hardwareConcurrency,\r\n          target: ref.current\r\n        },\r\n        locate: true,\r\n        decoder: {\r\n          readers: [\"code_128_reader\", \"upc_reader\", \"upc_e_reader\"]\r\n        }\r\n      }, function (err) {\r\n        if (err) {\r\n          return\r\n        }\r\n        Quagga.start()\r\n      })\r\n\r\n      Quagga.onDetected((res) => {\r\n        const code = res.codeResult.code;\r\n        callback && callback(code);\r\n        stop();\r\n        Quagga.stop();\r\n        Quagga.offProcessed();\r\n      });\r\n    }\r\n  }, [active]);\r\n  return (\r\n    <ScannerContext.Provider value={scan}>\r\n      {active && <div className={'scanner'} ref={ref}></div>}\r\n      {children}\r\n    </ScannerContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useScanner = () => {\r\n  return useContext(ScannerContext);\r\n}\r\n","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\Navbar.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],[],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  return (\r\n  \t<div>\r\n    <nav className=\"pcoded-navbar\">\r\n        <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-brand header-logo\">\r\n                <a href=\"#\" className=\"b-brand\">\r\n                    <div >\r\n                        <img className  = \"nav-logo\" src= \"logoImg.png\"   />\r\n                    </div>\r\n                    <span className=\"b-title\">SkyNet</span>\r\n                </a>\r\n                <a className=\"mobile-menu\" id=\"mobile-collapse\" href=\"#\"><span></span></a>\r\n            </div>\r\n            <div className=\"navbar-content scroll-div\">\r\n                <ul className=\"nav pcoded-inner-navbar\">\r\n                    <li data-username=\"form elements advance componant validation masking wizard picker select\" className=\"nav-item\">\r\n                        <NavLink to=\"/\" className=\"nav-link is-active\"><span className=\"pcoded-micon\"><i className=\"feather icon-file-text\"></i></span><span className=\"pcoded-mtext\">Dashboard</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/suppliermanagement\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Supplier</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/item\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Item</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/inventory\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Inventory</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/order\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Order</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/cashregisters\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Cash Registers</span></NavLink>\r\n                    </li>\r\n                    <li data-username=\"Table bootstrap datatable footable\" className=\"nav-item\">\r\n                        <NavLink to=\"/tracking\" className=\"nav-link is-active \"><span className=\"pcoded-micon\"><i className=\"feather icon-server\"></i></span><span className=\"pcoded-mtext\">Tracking</span></NavLink>\r\n                    </li>\r\n                    </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n    <header className=\"navbar pcoded-header navbar-expand-lg navbar-light\">\r\n        <div className=\"m-header\">\r\n            <a className=\"mobile-menu\" id=\"mobile-collapse1\" href=\"#\"><span></span></a>\r\n            <a href=\"#\" className=\"b-brand\">\r\n                   <div className=\"b-bg\">\r\n                       <i className=\"feather icon-trending-up\"></i>\r\n                   </div>\r\n                   <span className=\"b-title\">SkyNet</span>\r\n               </a>\r\n        </div>\r\n        <a className=\"mobile-menu\" id=\"mobile-header\" href=\"#\">\r\n            <i className=\"feather icon-more-horizontal\"></i>\r\n        </a>\r\n        <div className=\"collapse navbar-collapse\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li><a href=\"#\" className=\"full-screen\" onclick=\"javascript:toggleFullScreen()\"><i className=\"feather icon-maximize\"></i></a></li>\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">Dropdown</a>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                    </ul>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <div className=\"main-search\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" id=\"m-search\" className=\"form-control\" placeholder=\"Search . . .\"/>\r\n                            <a href=\"#\" className=\"input-group-append search-close\">\r\n                                <i className=\"feather icon-x input-group-text\"></i>\r\n                            </a>\r\n                            <span className=\"input-group-append search-btn btn btn-primary\">\r\n                                <i className=\"feather icon-search input-group-text\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li>\r\n                    <div className=\"dropdown\">\r\n                        <a className=\"dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\"><i className=\"icon feather icon-bell\"></i></a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right notification\">\r\n                            <div className=\"noti-head\">\r\n                                <h6 className=\"d-inline-block m-b-0\">Notifications</h6>\r\n                                <div className=\"float-right\">\r\n                                    <a href=\"#\" className=\"m-r-10\">mark as read</a>\r\n                                    <a href=\"#\">clear all</a>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"noti-body\">\r\n                                <li className=\"n-title\">\r\n                                    <p className=\"m-b-0\">NEW</p>\r\n                                </li>\r\n                                <li className=\"notification\">\r\n                                    <div className=\"media\">\r\n                                        <img className=\"img-radius\" src=\"assets/images/user/avatar-1.jpg\" alt=\"Generic placeholder image\"/>\r\n                                        <div className=\"media-body\">\r\n                                            <p><strong>John Doe</strong><span className=\"n-time text-muted\"><i className=\"icon feather icon-clock m-r-10\"></i>30 min</span></p>\r\n                                            <p>New ticket Added</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"n-title\">\r\n                                    <p className=\"m-b-0\">EARLIER</p>\r\n                                </li>\r\n                                <li className=\"notification\">\r\n                                    <div className=\"media\">\r\n                                        <img className=\"img-radius\" src=\"assets/images/user/avatar-2.jpg\" alt=\"Generic placeholder image\"/>\r\n                                        <div className=\"media-body\">\r\n                                            <p><strong>Joseph William</strong><span className=\"n-time text-muted\"><i className=\"icon feather icon-clock m-r-10\"></i>30 min</span></p>\r\n                                            <p>Prchace New Theme and make payment</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"notification\">\r\n                                    <div className=\"media\">\r\n                                        <img className=\"img-radius\" src=\"assets/images/user/avatar-3.jpg\" alt=\"Generic placeholder image\"/>\r\n                                        <div className=\"media-body\">\r\n                                            <p><strong>Sara Soudein</strong><span className=\"n-time text-muted\"><i className=\"icon feather icon-clock m-r-10\"></i>30 min</span></p>\r\n                                            <p>currently login</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"noti-footer\">\r\n                                <a href=\"#\">show all</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"dropdown drp-user\">\r\n                        <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <i className=\"icon feather icon-settings\"></i>\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right profile-notification\">\r\n                            <div className=\"pro-head\">\r\n                                <img src=\"assets/images/user/avatar-1.jpg\" className=\"img-radius\" alt=\"User-Profile-Image\"/>\r\n                                <span>John Doe</span>\r\n                                <a href=\"auth-#\" className=\"dud-logout\" title=\"Logout\">\r\n                                    <i className=\"feather icon-log-out\"></i>\r\n                                </a>\r\n                            </div>\r\n                            <ul className=\"pro-body\">\r\n                                <li><a href=\"#\" className=\"dropdown-item\"><i className=\"feather icon-settings\"></i> Settings</a></li>\r\n                                <li><a href=\"#\" className=\"dropdown-item\"><i className=\"feather icon-user\"></i> Profile</a></li>\r\n                                <li><a href=\"#\" className=\"dropdown-item\"><i className=\"feather icon-mail\"></i> My Messages</a></li>\r\n                                <li><a href=\"auth-#\" className=\"dropdown-item\"><i className=\"feather icon-lock\"></i> Lock Screen</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </header>\r\n\r\n    </div>\r\n  );\r\n };\r\n\r\n export default Navbar;","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\item.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\n// import Quagga from 'quagga'\r\nimport { useScanner } from \"../components/useScanner\";\r\nlet lock = false;\r\n\r\nexport default function Item() {\r\n  const [items, setItems] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [description, setDescription] = useState('');\r\n  const [cost, setCost] = useState('');\r\n  const [sellingPrice, setSellingPrice] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const [supplierId, setSupplierId] = useState('');\r\n  const [classification, setClassification] = useState('');\r\n  const [classifyArr, setClassifyArr] = useState([])\r\n  const { start } = useScanner();\r\n\r\n  const [costOrder, setCostOrder] = useState(undefined);\r\n  const [priceOrder, setPriceOrder] = useState(undefined);\r\n  const [classification2, setClassification2] = useState(undefined);\r\n\r\n  function getToken() {\r\n    const tokenString = sessionStorage.getItem('token');\r\n    return JSON.parse(tokenString);\r\n\r\n  }\r\n  let formDatas = {\r\n    itemID: \"\",\r\n    description: \"\",\r\n    cost: \"\",\r\n    sellingPrice: \"\",\r\n    note: \"\",\r\n    supplierID: \"\",\r\n    Classification: \"\",\r\n  };\r\n  React.useEffect(() => {\r\n    listItem();\r\n  }, []);\r\n\r\n  const costChanged = (event) => {\r\n    // console.log(event.target.value);\r\n    setCostOrder(event.target.value);\r\n  };\r\n\r\n  const priceChanged = (event) => {\r\n    // console.log(event.target.value);\r\n    setPriceOrder(event.target.value);\r\n  };\r\n\r\n  const classificationChanged = (event) => {\r\n    // console.log(event.target.value);\r\n    setClassification2(event.target.value);\r\n  };\r\n\r\n\r\n  const listItem = () => {\r\n    let url = \"http://localhost:8000/item?\";\r\n    if(costOrder && costOrder != ''){\r\n      url += \"costOrder=\" + costOrder;\r\n    }\r\n    if(priceOrder && priceOrder != ''){\r\n      url += \"priceOrder=\" + priceOrder;\r\n    }\r\n\r\n    if(classification2 && classification2 != ''){\r\n      url += \"classification=\" + classification2;\r\n    }\r\n\r\n    fetch(url, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + getToken()\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n        let classify = [];\r\n        data.map((item) => { \r\n            if(classify.indexOf(item.classification) == -1){\r\n              classify.push(item.classification);\r\n            }\r\n        });\r\n        setClassifyArr(classify);\r\n        setLoading(false);\r\n      }).catch((error) => {\r\n        console.log('error: ' + error);\r\n        // this.setState({ requestFailed: true });\r\n      });\r\n  }\r\n\r\n  const inputChanged = (event) => {\r\n    formDatas[event.target.name] = event.target.value;\r\n  };\r\n  function resetForm() {\r\n    document.getElementById(\"itemForm\").reset();\r\n    formDatas = {\r\n      itemID: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      sellingPrice: \"\",\r\n      note: \"\",\r\n      supplierID: \"\",\r\n      classification: \"\",\r\n    };\r\n  }\r\n  const handleSubmit = (event) => {\r\n    submitForm(formDatas);\r\n  };\r\n  const editItem = (itemID) => {\r\n    console.log(itemID);\r\n    console.log(\"edit\");\r\n    fetch(\"http://localhost:8000/item/find/\" + itemID, {\r\n\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + getToken()\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        formDatas.itemID = data.itemID;\r\n        formDatas.description = data.description;\r\n        formDatas.cost = data.cost;\r\n        formDatas.sellingPrice = data.sellingPrice;\r\n        formDatas.note = data.note;\r\n        formDatas.supplierID = data.supplierID;\r\n        formDatas.Classification = data.Classification;\r\n        console.log(formDatas);\r\n        addItem();\r\n      });\r\n\r\n  };\r\n  function deleteItem(ItemID) {\r\n    let confirmDelete = window.confirm(\"Are you sure you want to delete?\");\r\n    if (confirmDelete) {\r\n      fetch(\"http://localhost:8000/item/delete/\" + ItemID, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          'Authorization': 'Bearer ' + getToken()\r\n        })\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          alert(\"Item deleted\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n\r\n  };\r\n  const saveChanges = () => {\r\n    // get the values from the form\r\n    console.log(\"saving changes\");\r\n    submitForm(formDatas);\r\n    // reload the page\r\n    closeModal();\r\n    // window.location.reload();\r\n\r\n  };\r\n  function getItem(itemID) {\r\n    fetch(\"http://localhost:8000/item/find/\" + itemID)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      }\r\n      );\r\n  };\r\n\r\n  function submitForm(datas) {\r\n    if (datas.itemID === \"\") {\r\n      fetch(\"http://localhost:8000/item/add/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': 'Bearer ' + getToken(),\r\n        },\r\n        body: JSON.stringify(datas),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          resetForm();\r\n          window.location.reload();\r\n        });\r\n    } else {\r\n      fetch(\"http://localhost:8000/item/update/\" + datas.itemID + \"/\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': 'Bearer ' + getToken(),\r\n        },\r\n        body: JSON.stringify(datas),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          resetForm();\r\n          window.location.reload();\r\n          // });\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  const addItem = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"block\";\r\n    // set the values of the form\r\n    for (let key in formDatas) {\r\n      try {\r\n        document.getElementById(key).value = formDatas[key];\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const closeModal = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  const handleScan = () => {\r\n    start((code) => {\r\n      if (code && !lock) {\r\n        lock = true;\r\n        fetch(`https://barcode-look-api.herokuapp.com/product/${code}`)\r\n          .then(res => {\r\n            if (res.status === 404) {\r\n              alert('Not found');\r\n              return;\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(data => {\r\n            // result\r\n            if (data && Array.isArray(data.products) && data.products.length > 0) {\r\n              const product = data.products[0];\r\n              const description = product.description;\r\n              const title = product.title;\r\n              const prices = product.stores.map(item => Number(item.price));\r\n              const classification = product.category.split(' > ');\r\n              const avgPrice = prices.reduce((prev, next) => prev + next, 0) / prices.length;\r\n              setNote(description);\r\n              setDescription(title);\r\n              setSellingPrice(avgPrice.toFixed(2));\r\n              setClassification(classification.join(' - '));\r\n            }\r\n          }).catch(err => {\r\n            console.log(err)\r\n\r\n          }).finally(() => {\r\n            lock = false;\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  const search = () => {\r\n    listItem();\r\n  }\r\n\r\nconst reset = () => {\r\n    setPriceOrder(undefined);\r\n    setCostOrder(undefined);\r\n    setTimeout(() => {\r\n        listItem();\r\n    }, 0);\r\n}\r\n\r\n\r\n  // loading\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"title is-1\">Item</h1>\r\n        <div style={{margin: '10px'}}>\r\n            Cost:\r\n            <select placeholder=\"cost\" value={costOrder} onChange={costChanged} style={{margin: '10px', padding: '10px'}}>\r\n              <option style={{display:'none'}}></option>\r\n              <option value=\"cost\">Low to High</option>\r\n              <option value=\"-cost\">High to Low</option>\r\n            </select>\r\n            Selling Price:\r\n            <select placeholder=\"price\" value={priceOrder} onChange={priceChanged} style={{margin: '10px', padding: '10px'}}>\r\n              <option style={{display:'none'}}></option>\r\n              <option value=\"sellingPrice\">Low to High</option>\r\n              <option value=\"-sellingPrice\">High to Low</option>\r\n            </select>\r\n            Classification:\r\n            <select value={classification2} onChange={classificationChanged} style={{margin: '10px', padding: '10px'}}>\r\n              <option style={{display:'none'}}></option>\r\n              <option value=\"Fruit\">Fruit</option>\r\n              <option value=\"Food\">Food</option>\r\n              <option value=\"Gas\">Gas</option>\r\n              <option value=\"Beverage\">Beverage</option>\r\n              <option value=\"Equipment\">Equipment</option>\r\n            </select>\r\n            <button className=\"button is-primary\" onClick={search} style={{margin: '10px', padding: '10px'}}>Search</button>\r\n            <button className=\"button is-primary\" onClick={reset} >Reset</button>\r\n        </div>\r\n        {/* add button */}\r\n        <button className=\"button is-primary\" onClick={addItem}>Add Item</button>\r\n        {/* button that redirects to the item visualization page */}\r\n        <a href=\"/itemchart\">\r\n          <button className=\"button is-primary\" >Visualize</button>\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"data-table\">\r\n        <table className=\"my-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Description</th>\r\n              <th>Cost</th>\r\n              <th>Selling Price</th>\r\n              <th>Note</th>\r\n              <th>Supplier ID</th>\r\n              <th>Classification</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {items.map((item, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{item.description}</td>\r\n                <td>{item.cost}</td>\r\n                <td>{item.sellingPrice}</td>\r\n                <td>{item.note}</td>\r\n                <td>{item.supplierID}</td>\r\n                <td>{item.classification}</td>\r\n                <td>\r\n                  <button className=\"button is-warning is-fullwidth\" onClick={() => editItem(item.itemID)}>Edit</button>\r\n                  <button className=\"button is-danger is-fullwidth\" onClick={() => deleteItem(item.itemID)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div id=\"myModal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <header className=\"modal-header\">\r\n            <p className=\"modal-card-title\">Add Item</p>\r\n            <button className=\"button delete is-danger\" aria-label=\"close\" onClick={closeModal}>X</button>\r\n          </header>\r\n          <section className=\"modal-body\">\r\n            <form id=\"itemForm\">\r\n              <div className=\"field\">\r\n                <label className=\"label\">Description</label>\r\n                <div className=\"control\">\r\n                  <input value={description} onChange={e => setDescription(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Description\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Cost</label>\r\n                <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Cost\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Selling Price</label>\r\n                <div className=\"control\">\r\n                <input value={sellingPrice} onChange={e => setSellingPrice(e.target.value)} className=\"input\" type=\"tel\" placeholder=\"Selling Price\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Note</label>\r\n                <div className=\"control\">\r\n                <input value={note} onChange={e => setNote(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Note\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Supplier ID</label>\r\n                <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Supplier ID\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Classification</label>\r\n                <div className=\"control\">\r\n                <input value={classification} onChange={e => setClassification(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Classification\"/>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </section>\r\n          <footer className=\"modal-footer\">\r\n          <button onClick={handleScan} className={'button is-info'}>Scan</button>\r\n            <button className=\"button is-success\" onClick={saveChanges} >Save changes</button>\r\n            <button className=\"button is-danger\" onClick={closeModal}>Cancel</button>\r\n          </footer>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\suppliermanagement.js",["145","146","147","148"],[],"import React from \"react\";\r\n\r\nexport default function SupplierManagement() {\r\n  const [suppliers, setSuppliers] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  function getToken() {\r\n    const tokenString = sessionStorage.getItem('token');\r\n  return JSON.parse(tokenString);\r\n\r\n}\r\n  let formDatas = {\r\n    supplierID: \"\",\r\n    company: \"\",\r\n    email: \"\",\r\n    phoneNum: \"\",\r\n    country: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    note: \"\",\r\n  };\r\n  React.useEffect(() => {\r\n    fetch(\"http://localhost:8000/supplier\",{\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer '+ getToken()\r\n    })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSuppliers(data);\r\n        suppliers.map((supplier) => {});\r\n        setLoading(false);\r\n      }).catch((error) => {\r\n        console.log('error: ' + error);\r\n        // this.setState({ requestFailed: true });\r\n      });\r\n  }, []);\r\n  const inputChanged = (event) => {\r\n    formDatas[event.target.name] = event.target.value;\r\n  };\r\n  function resetForm() {\r\n    document.getElementById(\"supplierForm\").reset();\r\n    formDatas = {\r\n      supplierID: \"\",\r\n      company: \"\",\r\n      email: \"\",\r\n      phoneNum: \"\",\r\n      country: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      note: \"\",\r\n    };\r\n  }\r\n  const handleSubmit = (event) => {\r\n    submitForm(formDatas);\r\n  };\r\n  const editSupplier = (supplierID) => {\r\n    console.log(supplierID);\r\n    console.log(\"edit\");\r\n    fetch(\"http://localhost:8000/supplier/find/\" + supplierID,{\r\n\r\n        headers: new Headers({\r\n          'Authorization': 'Bearer '+ getToken()\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        formDatas.supplierID = data.supplierID;\r\n        formDatas.company = data.company;\r\n        formDatas.email = data.email;\r\n        formDatas.phoneNum = data.phoneNum;\r\n        formDatas.country = data.country;\r\n        formDatas.street = data.street;\r\n        formDatas.city = data.city;\r\n        formDatas.state = data.state;\r\n        formDatas.zip = data.zip;\r\n        formDatas.note = data.note;\r\n        console.log(formDatas);\r\n        addSupplier();\r\n      });\r\n\r\n  };\r\n  function deleteSuppliers(supplierID) {\r\n    let confirmDelete = window.confirm(\"Are you sure you want to delete?\");\r\n    if (confirmDelete) {\r\n      fetch(\"http://localhost:8000/supplier/delete/\" + supplierID, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          'Authorization': 'Bearer '+ getToken()\r\n      })\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          alert(\"Supplier deleted\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n\r\n  };\r\n  const saveChanges = () => {\r\n    // get the values from the form\r\n    console.log(\"saving changes\");\r\n    submitForm(formDatas);\r\n    // reload the page\r\n    closeModal();\r\n    // window.location.reload();\r\n\r\n  };\r\n  function getSupplier(supplierID) {\r\n    fetch(\"http://localhost:8000/supplier/find/\" + supplierID)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      }\r\n      );\r\n  };\r\n\r\n  function submitForm(datas) {\r\n    if (datas.supplierID === \"\") {\r\n      fetch(\"http://localhost:8000/supplier/add/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': 'Bearer '+ getToken(),\r\n        },\r\n        body: JSON.stringify(datas),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          resetForm();\r\n          window.location.reload();\r\n        });\r\n    } else {\r\n    fetch(\"http://localhost:8000/supplier/update/\" + datas.supplierID+\"/\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': 'Bearer '+ getToken(),\r\n      },\r\n      body: JSON.stringify(datas),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        resetForm();\r\n        window.location.reload();\r\n      // });\r\n    });\r\n  }\r\n\r\n  }\r\n\r\n  const addSupplier = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"block\";\r\n    // set the values of the form\r\n    for(let key in formDatas) {\r\n      try {\r\n      document.getElementById(key).value = formDatas[key];\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    try {\r\n      if(formDatas.phoneNum !== \"\") {\r\n        // remove spaces and dashes\r\n        let phoneNum = formDatas.phoneNum.replace(/\\s/g, \"\").replace(/-/g, \"\");\r\n        formDatas.phoneNum = phoneNum;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  };\r\n  const closeModal = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n  // loading\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n\r\n    return (\r\n  <div>\r\n    <div>\r\n      <h1 className=\"title is-1\">Supplier Management</h1>\r\n      {/* add button */}\r\n      <button className=\"button is-primary\" onClick={addSupplier} >Add Supplier</button>\r\n    </div>\r\n\r\n\r\n\r\n      <div className=\"data-table\">\r\n      <table className=\"my-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Company</th>\r\n          <th>Email</th>\r\n          <th>Phone Number</th>\r\n          <th>Country</th>\r\n          <th>Street</th>\r\n          <th>City</th>\r\n          <th>State</th>\r\n          <th>Zip</th>\r\n          <th>Note</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n\r\n        {suppliers.map((supplier, i) => (\r\n          <tr key={i}>\r\n            <td>{i+1}</td>\r\n            <td>{supplier.company}</td>\r\n            <td>{supplier.email}</td>\r\n            <td>{supplier.phoneNum}</td>\r\n            <td>{supplier.country}</td>\r\n            <td>{supplier.street}</td>\r\n            <td>{supplier.city}</td>\r\n            <td>{supplier.state}</td>\r\n            <td>{supplier.zip}</td>\r\n            <td>{supplier.note}</td>\r\n            <td>\r\n              <button className=\"button is-warning is-fullwidth\" onClick={() => editSupplier(supplier.supplierID)}>Edit</button>\r\n              <button className=\"button is-danger is-fullwidth\" onClick={() => deleteSuppliers(supplier.supplierID)} >Delete</button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n\r\n <div id=\"myModal\" className=\"modal\">\r\n    <div className=\"modal-content\">\r\n      <header className=\"modal-header\">\r\n        <p className=\"modal-card-title\">Add Supplier</p>\r\n        <button className=\"button delete is-danger\" aria-label=\"close\" onClick={closeModal} >X</button>\r\n      </header>\r\n      <section className=\"modal-body\">\r\n        <form id=\"supplierForm\">\r\n          <div className=\"field\">\r\n            <label className=\"label\">Company</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\"  name=\"company\" id=\"company\" onChange={inputChanged} placeholder=\"Company\" />\r\n            </div>\r\n            </div>\r\n            <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"email\" id=\"email\"  onChange={inputChanged} placeholder=\"Email\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Phone Number</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"tel\" name=\"phoneNum\" id=\"phoneNum\"  onChange={inputChanged} placeholder=\"Phone Number\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Country</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"country\" id=\"country\"  onChange={inputChanged} placeholder=\"Country\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Street</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"street\" id=\"street\"  onChange={inputChanged} placeholder=\"Street\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">City</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"city\" id=\"city\"  onChange={inputChanged} placeholder=\"City\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">State</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\"  name=\"state\" id=\"state\"  onChange={inputChanged} placeholder=\"State\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Zip</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"zip\" id=\"zip\"  onChange={inputChanged} placeholder=\"Zip\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Note</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"note\" id=\"note\"  onChange={inputChanged} placeholder=\"Note\" />\r\n              </div>\r\n              </div>\r\n        </form>\r\n      </section>\r\n      <footer className=\"modal-footer\">\r\n        <button className=\"button is-success\" onClick={saveChanges} >Save changes</button>\r\n        <button className=\"button is-danger\" onClick={closeModal}>Cancel</button>\r\n      </footer>\r\n\r\n      </div>\r\n      </div>\r\n\r\n  </div>\r\n    );\r\n}","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\order.js",["149","150","151","152"],[],"import React from \"react\";\r\n\r\nexport default function Order() {\r\n\r\n  const [orders, setOrders] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  function getToken() {\r\n    const tokenString = sessionStorage.getItem('token');\r\n  return JSON.parse(tokenString);\r\n\r\n}\r\n  let formDatas = {\r\n    orderID: \"\",\r\n    itemID: \"\",\r\n    quantity: \"\",\r\n    orderDate: \"\",\r\n    orderPrice: \"\",\r\n    customerID: \"\",\r\n    shipID: \"\",\r\n  };\r\n  React.useEffect(() => {\r\n    fetch(\"http://localhost:8000/order\",{\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer '+ getToken()\r\n    })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setOrders(data);\r\n        orders.map((order) => {});\r\n        setLoading(false);\r\n      }).catch((error) => {\r\n        console.log('error: ' + error);\r\n        // this.setState({ requestFailed: true });\r\n      });\r\n  }, []);\r\n  const inputChanged = (event) => {\r\n    formDatas[event.target.name] = event.target.value;\r\n  };\r\n  function resetForm() {\r\n    document.getElementById(\"orderForm\").reset();\r\n    formDatas = {\r\n      orderID: \"\",\r\n      itemID: \"\",\r\n      quantity: \"\",\r\n      orderDate: \"\",\r\n      orderPrice: \"\",\r\n      customerID: \"\",\r\n      shipID: \"\",\r\n    };\r\n  }\r\n  const handleSubmit = (event) => {\r\n    submitForm(formDatas);\r\n  };\r\n  const editOrder = (orderID) => {\r\n    console.log(orderID);\r\n    console.log(\"edit\");\r\n    fetch(\"http://localhost:8000/order/find/\" + orderID,{\r\n\r\n        headers: new Headers({\r\n          'Authorization': 'Bearer '+ getToken()\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        formDatas.orderID = data.orderID;\r\n        formDatas.itemID = data.itemID;\r\n        formDatas.quantity = data.quantity;\r\n        formDatas.orderDate = data.orderDate;\r\n        formDatas.orderPrice = data.orderPrice;\r\n        formDatas.customerID = data.customerID;\r\n        formDatas.shipID = data.shipID;\r\n        console.log(formDatas);\r\n        addOrder();\r\n      });\r\n\r\n  };\r\n  function deleteOrder(orderID) {\r\n    let confirmDelete = window.confirm(\"Are you sure you want to delete?\");\r\n    if (confirmDelete) {\r\n      fetch(\"http://localhost:8000/order/delete/\" + orderID, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          'Authorization': 'Bearer '+ getToken()\r\n      })\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          alert(\"Order deleted\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n\r\n  };\r\n  const saveChanges = () => {\r\n    // get the values from the form\r\n    console.log(\"saving changes\");\r\n    submitForm(formDatas);\r\n    // reload the page\r\n    closeModal();\r\n    // window.location.reload();\r\n\r\n  };\r\n  function getOrder(orderID) {\r\n    fetch(\"http://localhost:8000/order/find/\" + orderID)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      }\r\n      );\r\n  };\r\n\r\n  function submitForm(datas) {\r\n    if (datas.orderID === \"\") {\r\n      fetch(\"http://localhost:8000/order/add/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': 'Bearer '+ getToken(),\r\n        },\r\n        body: JSON.stringify(datas),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          resetForm();\r\n          window.location.reload();\r\n        });\r\n    } else {\r\n    fetch(\"http://localhost:8000/order/update/\" + datas.orderID+\"/\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': 'Bearer '+ getToken(),\r\n      },\r\n      body: JSON.stringify(datas),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        resetForm();\r\n        window.location.reload();\r\n      // });\r\n    });\r\n  }\r\n\r\n  }\r\n\r\n  const addOrder = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"block\";\r\n    // set the values of the form\r\n    for(let key in formDatas) {\r\n      try {\r\n      document.getElementById(key).value = formDatas[key];\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n  };\r\n  const closeModal = () => {\r\n    let modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n  // loading\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n    return (\r\n  <div>\r\n    <div>\r\n      <h1 className=\"title is-1\">Order</h1>\r\n      {/* add button */}\r\n      <button className=\"button is-primary\" onClick={addOrder}>Add Order</button>\r\n      {/* button that redirects to the item visualization page */}\r\n      <a href=\"/orderchart\">\r\n          <button className=\"button is-primary\" >Visualize</button>\r\n        </a>\r\n    </div>\r\n\r\n      <div className=\"data-table\">\r\n      <table className=\"my-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Item ID</th>\r\n          <th>Quantity</th>\r\n          <th>Order Date</th>\r\n          <th>Order Price</th>\r\n          <th>Customer ID</th>\r\n          <th>Ship ID</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n\r\n        {orders.map((order, i) => (\r\n          <tr key={i}>\r\n            <td>{i+1}</td>\r\n            <td>{order.itemID}</td>\r\n            <td>{order.quantity}</td>\r\n            <td>{order.orderDate}</td>\r\n            <td>{order.orderPrice}</td>\r\n            <td>{order.customerID}</td>\r\n            <td>{order.shipID}</td>\r\n            <td>\r\n              <button className=\"button is-warning is-fullwidth\" onClick={() => editOrder(order.orderID)}>Edit</button>\r\n              <button className=\"button is-danger is-fullwidth\" onClick={() => deleteOrder(order.orderID)}>Delete</button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n\r\n <div id=\"myModal\" className=\"modal\">\r\n    <div className=\"modal-content\">\r\n      <header className=\"modal-header\">\r\n        <p className=\"modal-card-title\">Add Order</p>\r\n        <button className=\"button delete is-danger\" aria-label=\"close\" onClick={closeModal}>X</button>\r\n      </header>\r\n      <section className=\"modal-body\">\r\n        <form id=\"orderForm\">\r\n          <div className=\"field\">\r\n            <label className=\"label\">Item ID</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\"  name=\"itemID\" id=\"itemID\" onChange={inputChanged} placeholder=\"Item ID\" />\r\n            </div>\r\n            </div>\r\n            <div className=\"field\">\r\n            <label className=\"label\">Quantity</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"quantity\" id=\"quantity\"  onChange={inputChanged} placeholder=\"Quantity\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Order Date</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"tel\" name=\"orderDate\" id=\"orderDate\"  onChange={inputChanged} placeholder=\"Order Date\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Order Price</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"orderPrice\" id=\"orderPrice\"  onChange={inputChanged} placeholder=\"Order Price\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Customer ID</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"customerID\" id=\"customerID\"  onChange={inputChanged} placeholder=\"Customer ID\" />\r\n              </div>\r\n              </div>\r\n              <div className=\"field\">\r\n            <label className=\"label\">Ship ID</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" name=\"shipID\" id=\"shipID\"  onChange={inputChanged} placeholder=\"Ship ID\" />\r\n              </div>\r\n              </div>\r\n        </form>\r\n      </section>\r\n      <footer className=\"modal-footer\">\r\n        <button className=\"button is-success\" onClick={saveChanges}>Save changes</button>\r\n        <button className=\"button is-danger\" onClick={closeModal}>Cancel</button>\r\n      </footer>\r\n\r\n      </div>\r\n      </div>\r\n  </div>\r\n    );\r\n}","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\itemchart.js",["153","154","155","156","157","158","159"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { BarChart, Bar, LineChart, Line, Label, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n  export default function Itemchart() {\r\n    const [items, setItems] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    function getToken() {\r\n      const tokenString = sessionStorage.getItem('token');\r\n      return JSON.parse(tokenString);\r\n\r\n    }\r\n    let formDatas = {\r\n      itemID: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      sellingPrice: \"\",\r\n      note: \"\",\r\n      supplierID: \"\",\r\n      Classification: \"\",\r\n    };\r\n     {\r\n        React.useEffect(() => {\r\n            fetch(\"http://localhost:8000/item\", {\r\n              headers: new Headers({\r\n                'Authorization': 'Bearer ' + getToken()\r\n              })\r\n            })\r\n              .then((res) => res.json())\r\n              .then((data) => {\r\n                setItems(data);\r\n                items.map((item) => { });\r\n                setLoading(false);\r\n              }).catch((error) => {\r\n                console.log('error: ' + error);\r\n                // this.setState({ requestFailed: true });\r\n              });\r\n          }, []);\r\n          const inputChanged = (event) => {\r\n            formDatas[event.target.name] = event.target.value;\r\n          };\r\n\r\n    return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"title is-1\">Item Visualization</h1>\r\n        {/* button that redirects to the Item page */}\r\n      <a href=\"/item\">\r\n        <button className=\"button is-primary\" >Back</button>\r\n      </a>\r\n        <h3 className=\"title is-1\">Bar Chart</h3>\r\n      <ResponsiveContainer width=\"100%\" height={500}>\r\n        <BarChart\r\n        width={500}\r\n        height={300}\r\n          data={items}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"description\">\r\n            <Label value=\"Items\" offset={-1} position=\"insideBottom\" />\r\n          </XAxis>\r\n          <YAxis type=\"number\" domain={[0, 1500]} label={{ value: 'USD', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar name='Selling Price' dataKey=\"sellingPrice\" fill=\"#6157a5\" />\r\n          <Bar name='Cost' dataKey=\"cost\" fill=\"#3d6e6a\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n      <h3 className=\"title is-1\">Line Chart</h3>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={items}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"description\">\r\n            <Label value=\"Items\" offset={-1} position=\"insideBottom\" />\r\n          </XAxis>\r\n          <YAxis type=\"number\" domain={[0, 1500]} label={{ value: 'USD', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line name='Selling Price' type=\"monotone\" dataKey=\"sellingPrice\" stroke=\"#6157a5\" activeDot={{ r: 8 }} />\r\n          <Line name='Cost' type=\"monotone\" dataKey=\"cost\" stroke=\"#3d6e6a\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n      </div>\r\n      </div>\r\n    );\r\n    }\r\n  }\r\n","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\dashboard.js",[],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\orderchart.js",["160","161","162","163","164","165","166"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { BarChart, Bar, PieChart, Pie, Cell, Label, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n  export default function Orderchart() {\r\n    const [orders, setOrders] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const COLORS = ['#edc951 ', '#eb6841 ', '#cc2a36 ', '#4f372d ', '#00a0b0'];\r\n    const data = [];\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    // filter the data to show only data between 2022/02/01 and 2022/02/30\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n    };\r\n\r\n    function getToken() {\r\n      const tokenString = sessionStorage.getItem('token');\r\n      return JSON.parse(tokenString);\r\n\r\n    }\r\n    let formDatas = {\r\n        orderID: \"\",\r\n        itemID: \"\",\r\n        quantity: \"\",\r\n        orderDate: \"\",\r\n        orderPrice: \"\",\r\n        customerID: \"\",\r\n        shipID: \"\",\r\n      };\r\n     {\r\n        React.useEffect(() => {\r\n            fetch(\"http://localhost:8000/order\",{\r\n              headers: new Headers({\r\n                'Authorization': 'Bearer '+ getToken()\r\n            })\r\n            })\r\n              .then((res) => res.json())\r\n              .then((data) => {\r\n                setOrders(data);\r\n                orders.map((order) => {});\r\n                setLoading(false);\r\n              }).catch((error) => {\r\n                console.log('error: ' + error);\r\n                // this.setState({ requestFailed: true });\r\n              });\r\n          }, []);\r\n          const inputChanged = (event) => {\r\n            formDatas[event.target.name] = event.target.value;\r\n          };\r\n          const filteredData = orders.filter((entry) => {\r\n            const date = new Date(entry.orderDate);\r\n            return date >= new Date(\"2022-03-01\") && date <= new Date(\"2022-03-28\");\r\n        });\r\n    return (\r\n    <div>\r\n        <h1 className=\"title is-1\">Order Visualization</h1>\r\n        {/* button that redirects to the order page */}\r\n      <a href=\"/order\">\r\n        <button className=\"button is-primary\" >Back</button>\r\n      </a>\r\n      <ResponsiveContainer width=\"100%\" height={1000}>\r\n      <PieChart width={1000} height={1000}>\r\n          <Pie\r\n            data={orders}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={500}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"quantity\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n      <div style={{ width: '100%', height: 500 }}>\r\n      <ResponsiveContainer>\r\n          <PieChart>\r\n            <Pie dataKey=\"quantity\" data={orders} fill=\"#8884d8\" label />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <ResponsiveContainer width=\"100%\" height={700}>\r\n      <PieChart width={200} height={200}>\r\n      <Pie\r\n        data={filteredData}\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={300}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"quantity\"\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n    </ResponsiveContainer>\r\n    <ResponsiveContainer width=\"100%\" height={1000}>\r\n    <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={filteredData}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"orderDate\">\r\n            <Label value=\"Order Date\" offset={-1} position=\"insideBottom\" />\r\n          </XAxis>\r\n          <YAxis type=\"number\" domain={[0, 'datamax']} label={{ value: 'Amount', angle: -90, position: 'insideLeft', textAnchor: 'middle' }}/>\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar name='Quantity of Order' dataKey=\"quantity\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n    </ResponsiveContainer>\r\n      </div>\r\n    );\r\n    }\r\n  }","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\inventory.js",["167","168","169","170","171","172","173","174","175","176","177"],[],"import React from 'react'\r\nimport AppCss from '../App.css'\r\nexport default function InventoryPage() {\r\n  const [items, setItems] = React.useState([])\r\n  const [allItems, setAllItems] = React.useState([])\r\n  const [Itemsto, setItemsto] = React.useState([])\r\n  const [loading, setLoading] = React.useState(true)\r\n\r\n  const [itemId, setItemId] = React.useState('')\r\n  const [quantityOrder, setQuantityOrder] = React.useState('')\r\n  const [expirationDateOrder, setExpirationDateOrder] = React.useState('')\r\n  const [Check, setCheck] = React.useState(0)\r\n  let quantityCheck = undefined\r\n\r\n  let formDatas = {\r\n    stackID: '',\r\n    itemID: '',\r\n    quantity: '',\r\n    expirationDate: '',\r\n    inboundDate: ''\r\n  }\r\n  const handleCheck = () => {\r\n    setItemsto(Itemsto)\r\n    for (let i = 0, len = items.length; i < len; i++) {\r\n      if (items[i].quantity > quantityCheck) {\r\n        Itemsto.splice(i, 1)\r\n        i--\r\n        len--\r\n      }\r\n    }\r\n    setCheck(Math.round(Math.random() * 10))\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    listItem()\r\n  }, [])\r\n\r\n  const inputChanged = event => {\r\n    formDatas[event.target.name] = event.target.value\r\n  }\r\n\r\n  const quantityChanged = event => {\r\n    setQuantityOrder(event.target.value)\r\n  }\r\n\r\n  const expirationDateChanged = event => {\r\n    setExpirationDateOrder(event.target.value)\r\n  }\r\n\r\n  const listItem = id => {\r\n    let url = 'http://localhost:8000/inventory/?'\r\n    url += 'itemId=' + id\r\n    url += '&quantityOrder=' + quantityOrder\r\n    url += '&expirationDateOrder=' + expirationDateOrder\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        setItems(json)\r\n        setItemsto(json)\r\n        if (!(id && id != '')) {\r\n          setAllItems(json)\r\n        }\r\n        setLoading(false)\r\n        console.log(json)\r\n        let inventoryTime = localStorage.getItem('inventoryTime')\r\n        let flag = true\r\n        if (inventoryTime) {\r\n          let tmpTime = new Date(parseInt(inventoryTime))\r\n          let day1 =\r\n            String(String(tmpTime.getFullYear()) + tmpTime.getMonth()) +\r\n            tmpTime.getDate()\r\n          let now = new Date()\r\n          let day2 =\r\n            String(String(now.getFullYear()) + now.getMonth()) + now.getDate()\r\n          // console.log(tmpTime, now, day1, day2);\r\n          if (day1 != day2) {\r\n            flag = false\r\n            localStorage.setItem('inventoryTime', Number(new Date()))\r\n          }\r\n        } else {\r\n          flag = false\r\n          localStorage.setItem('inventoryTime', Number(new Date()))\r\n        }\r\n        if (flag) {\r\n          return\r\n        }\r\n        let itemStr = ''\r\n        let count = 0\r\n        for (let i = 0; i < json.length; i++) {\r\n          if (json[i].quantity == 1) {\r\n            count++\r\n            itemStr += ',' + json[i].itemID\r\n          }\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const itemIdChanged = event => {\r\n    setItemId(event.target.value)\r\n  }\r\n  const search = () => {\r\n    listItem(itemId)\r\n  }\r\n\r\n  const reset = () => {\r\n    setItemId('')\r\n    setExpirationDateOrder('')\r\n    setQuantityOrder('')\r\n    quantityCheck=undefined\r\n    setTimeout(() => {\r\n      listItem()\r\n    }, 0)\r\n  }\r\n  const saveChanges = () => {\r\n    // get the values from the form\r\n    console.log('saving changes')\r\n    submitForm(formDatas)\r\n    // reload the page\r\n    closeModal()\r\n    // window.location.reload();\r\n  }\r\n\r\n  const print = () => {\r\n    // console.log(AppCss);\r\n    let iframe = document.createElement('IFRAME')\r\n    iframe.setAttribute(\r\n      'style',\r\n      'position:absolute;width:0px;height:0px;left:-500px;top:-500px;size: auto;margin: 0mm;'\r\n    )\r\n    document.body.appendChild(iframe)\r\n    let doc = iframe.contentWindow.document\r\n    doc.write(\"<h2 style='margin:auto;text-align: center;'>Invoice</h2><br/>\")\r\n    let data = [\r\n      ['123', '333', '444', '555'],\r\n      ['123', '333', '444', '555']\r\n    ]\r\n    let tbody = ''\r\n    for (let i = 0; i < data.length; i++) {\r\n      let tr = '<tr>'\r\n      tr += \"<td style='border: 1px solid black;'>\" + data[i][0] + '</td>'\r\n      tr += \"<td style='border: 1px solid black;'>\" + data[i][1] + '</td>'\r\n      tr += \"<td style='border: 1px solid black;'>\" + data[i][2] + '</td>'\r\n      tr += \"<td style='border: 1px solid black;'>\" + data[i][3] + '</td>'\r\n      tr += '</tr>'\r\n      tbody += tr\r\n    }\r\n    let table =\r\n      '<table style= \\'margin:auto; border: 1px solid black; text-align: center; width: 90%;\\' cellspacing=\\'0\\'>' +\r\n      '<thead><tr>' +\r\n      '<th style=\\'border: 1px solid black;\\'>itemID</th>' +\r\n      '<th style=\\'border: 1px solid black;\\'>quantity</th>' +\r\n      '<th style=\\'border: 1px solid black;\\'>inboundDate</th>' +\r\n      '<th style=\\'border: 1px solid black;\\'>expirationDate</th>' +\r\n      '</tr></thead><tbody>' +\r\n      tbody +\r\n      '</tbody></table>'\r\n\r\n    doc.write(table)\r\n    // doc.body.innerHTML = obj.innerHTML;\r\n    doc.close()\r\n    iframe.contentWindow.focus()\r\n    iframe.contentWindow.print()\r\n    document.body.removeChild(iframe)\r\n\r\n    // iframe.onload = function() { //解决图片显示不了的问题\r\n    //     iframe.contentWindow.focus();\r\n    //     iframe.contentWindow.print();\r\n    //     document.body.removeChild(iframe);\r\n    // };\r\n  }\r\n\r\n  function submitForm(datas) {\r\n    if (datas.stackID === '') {\r\n      console.log(datas, allItems)\r\n      for (let i = 0; i < allItems.length; i++) {\r\n        if (datas.itemID == allItems[i].itemID) {\r\n          window.confirm('ItemID already exist')\r\n          return\r\n        }\r\n      }\r\n      fetch('http://localhost:8000/inventory/add/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(datas)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.code == 0) {\r\n            window.confirm(data.msg)\r\n          } else {\r\n            window.location.reload()\r\n          }\r\n        })\r\n    } else {\r\n      fetch('http://localhost:8000/inventory/update/' + datas.stackID + '/', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(datas)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          // console.log(data);\r\n          window.location.reload()\r\n          // });\r\n        })\r\n    }\r\n  }\r\n\r\n  const addItem = () => {\r\n    let modal = document.getElementById('myModal')\r\n    document.getElementById('itemID').disabled = false\r\n    modal.style.display = 'block'\r\n    formDatas = {\r\n      stackID: '',\r\n      itemID: '',\r\n      quantity: '',\r\n      expirationDate: '',\r\n      inboundDate: ''\r\n    }\r\n    for (let key in formDatas) {\r\n      try {\r\n        document.getElementById(key).value = formDatas[key]\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const editItem = item => {\r\n    formDatas = Object.assign({}, item)\r\n    let modal = document.getElementById('myModal')\r\n    document.getElementById('itemID').disabled = true\r\n    modal.style.display = 'block'\r\n    for (let key in formDatas) {\r\n      try {\r\n        document.getElementById(key).value = formDatas[key]\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  const change = e => {\r\n    quantityCheck = e.target.value\r\n  }\r\n  const deleteItem = id => {\r\n    let confirmDelete = window.confirm('Are you sure you want to delete?')\r\n    if (confirmDelete) {\r\n      fetch('http://localhost:8000/inventory/delete/' + id, {\r\n        method: 'DELETE'\r\n      }).then(res => {\r\n        if (res.ok) {\r\n          alert('Inventory deleted')\r\n          window.location.reload()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    let modal = document.getElementById('myModal')\r\n    modal.style.display = 'none'\r\n  }\r\n\r\n  // loading\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"title is-1\">Inventory</h1>\r\n\r\n        <div style={{ margin: '10px' }}>\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"please input itemId\"\r\n            value={itemId}\r\n            onChange={itemIdChanged}\r\n            style={{ margin: '10px', padding: '10px' }}\r\n          />\r\n          expirationDate:\r\n          <select\r\n            placeholder=\"\"\r\n            value={expirationDateOrder}\r\n            onChange={expirationDateChanged}\r\n            style={{ margin: '10px', padding: '10px' }}\r\n          >\r\n            <option style={{ display: 'none' }}></option>\r\n            <option value=\"expirationDate\">Low to High</option>\r\n            <option value=\"-expirationDate\">High to Low</option>\r\n          </select>\r\n          Quantity:\r\n          <select\r\n            placeholder=\"\"\r\n            value={quantityOrder}\r\n            onChange={quantityChanged}\r\n            style={{ margin: '10px', padding: '10px' }}\r\n          >\r\n            <option style={{ display: 'none' }}></option>\r\n            <option value=\"quantity\">Low to High</option>\r\n            <option value=\"-quantity\">High to Low</option>\r\n          </select>\r\n          <button\r\n            className=\"button is-primary\"\r\n            onClick={search}\r\n            style={{ margin: '10px', padding: '10px' }}\r\n          >\r\n            Search\r\n          </button>\r\n          <button className=\"button is-primary\" onClick={reset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"quantity\">Enter Quantity:</label>\r\n          <input type=\"number\" value={quantityCheck} onChange={change} />\r\n          <button onClick={handleCheck}>Check Inventory</button>\r\n        </div>\r\n\r\n        {/* add button */}\r\n        <button className=\"button is-primary\" onClick={addItem}>\r\n          Add Inventory\r\n        </button>\r\n        {/* <button className=\"button is-primary\" onClick={print} >Print</button> */}\r\n      </div>\r\n\r\n      <div className=\"data-table\" id=\"dataTable\">\r\n        <table className=\"my-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>itemID</th>\r\n              <th>quantity</th>\r\n              <th>inboundDate</th>\r\n              <th>expirationDate</th>\r\n              <th>action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Itemsto.map((item, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{Itemsto[i].itemID}</td>\r\n                <td>{Itemsto[i].quantity}</td>\r\n                <td>{Itemsto[i].inboundDate}</td>\r\n                <td>{Itemsto[i].expirationDate}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"button is-warning is-fullwidth\"\r\n                    onClick={() => editItem(item)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"button is-danger is-fullwidth\"\r\n                    onClick={() => deleteItem(item.stackID)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div id=\"myModal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <header className=\"modal-header\">\r\n            <p className=\"modal-card-title\">Inventory</p>\r\n            <button\r\n              className=\"button delete is-danger\"\r\n              aria-label=\"close\"\r\n              onClick={closeModal}\r\n            >\r\n              X\r\n            </button>\r\n          </header>\r\n          <section className=\"modal-body\">\r\n            <form>\r\n              <div className=\"field\">\r\n                <label className=\"label\">quantity</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    placeholder=\"quantity\"\r\n                    id=\"quantity\"\r\n                    name=\"quantity\"\r\n                    onChange={inputChanged}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">inboundDate</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"inboundDate\"\r\n                    id=\"inboundDate\"\r\n                    name=\"inboundDate\"\r\n                    onChange={inputChanged}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">expirationDate</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"expirationDate\"\r\n                    id=\"expirationDate\"\r\n                    name=\"expirationDate\"\r\n                    onChange={inputChanged}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Item ID</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Item ID\"\r\n                    id=\"itemID\"\r\n                    name=\"itemID\"\r\n                    onChange={inputChanged}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </section>\r\n          <footer className=\"modal-footer\">\r\n            <button className=\"button is-success\" onClick={saveChanges}>\r\n              Save changes\r\n            </button>\r\n            <button className=\"button is-danger\" onClick={closeModal}>\r\n              Cancel\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingUSPS.js",["178"],[],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport './trackingstyle.css';\r\n\r\nfunction TrackingUSPS() {\r\n  const [trackingNumber, setTrackingNumber] = useState(\"\");\r\n  const [trackingInfo, setTrackingInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const apiKey = \"289TEAMS3765\";\r\n  const apiUrl = `https://secure.shippingapis.com/ShippingAPI.dll?API=TrackV2&XML=<TrackRequest USERID='${apiKey}'><TrackID ID='${trackingNumber}'></TrackID></TrackRequest>`;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(apiUrl);\r\n      const xmlString = await response.text();\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\r\n\r\n      const errorElement = xmlDoc.getElementsByTagName(\"Error\");\r\n      if (errorElement.length > 0) {\r\n        const errorMessage = errorElement[0].getElementsByTagName(\"Description\")[0].textContent;\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const trackDetails = xmlDoc.getElementsByTagName(\"TrackDetail\");\r\n\r\n      const trackingData = [];\r\n      for (let i = 0; i < trackDetails.length; i++) {\r\n        const eventDate = trackDetails[i].getElementsByTagName(\"EventDate\")[0].childNodes[0].nodeValue;\r\n        const eventTime = trackDetails[i].getElementsByTagName(\"EventTime\")[0].childNodes[0].nodeValue;\r\n        const eventDescription = trackDetails[i].getElementsByTagName(\"Event\")[0].childNodes[0].nodeValue;\r\n        trackingData.push({ eventDate, eventTime, eventDescription });\r\n      }\r\n      setTrackingInfo(trackingData);\r\n      setIsLoading(false);\r\n      setErrorMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching tracking data\", error);\r\n      setIsLoading(false);\r\n      setErrorMessage(error.message || \"An error occurred while fetching tracking data. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class = \"tracking-output\">\r\n      <h1 class = \"tracking-header\" >USPS Tracking Number Lookup</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={trackingNumber} onChange={(e) => setTrackingNumber(e.target.value)} />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Loading...\" : \"Track Package\"}\r\n        </button>\r\n      </form>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      {trackingInfo && (\r\n        <div>\r\n          <h3>Tracking information for {trackingNumber}</h3>\r\n          <ul>\r\n            {trackingInfo.map((event) => (\r\n              <li key={event.eventDate + event.eventTime + event.eventDescription}>\r\n                {event.eventDate} - {event.eventTime} - {event.eventDescription}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackingUSPS;\r\n","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingRedirect.js",["179","180","181","182","183","184"],[],"import React, { useState } from \"react\";\r\n\r\n\r\nconst outputBoxStyles = {\r\n  border: \"1px solid black\",\r\n  padding: \"10px\",\r\n  margin: \"10px\",\r\n  position: \"relative\"\r\n};\r\n\r\nconst closeButtonStyles = {\r\n  position: \"absolute\",\r\n  top: 0,\r\n  right: 0\r\n};\r\n\r\n\r\nfunction TrackingRedirect() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [outputValue, setOutputValue] = useState(\"\");\r\n  const [showTextBox, setShowTextBox] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const handleButtonClick = () => {\r\n    \r\n\r\n    if(selectedOption == \"ups\"){\r\n      setShowTextBox(true);\r\n      setOutputValue(\"redirecting to UPS\");\r\n      window.location.href = '/trackingUPS';\r\n      }\r\n    else if (selectedOption== \"usps\"){\r\n      setShowTextBox(true);\r\n      setOutputValue(\"redirecting to USPS\");\r\n      window.location.href = '/trackingUSPS';\r\n      }\r\n    \r\n    };\r\n\r\n    const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div class = \"tracking-output\">\r\n      <div>\r\n      <h1 class = \"tracking-header\">Tracking</h1>\r\n      <label htmlFor=\"carrier-select\">Select a carrier:&nbsp;&nbsp;&nbsp;</label>\r\n      <select id=\"instrument-select\" value={selectedOption} onChange={handleOptionChange}>\r\n        <option value=\"\"></option>\r\n        <option value=\"usps\">USPS</option>\r\n        <option value=\"ups\">UPS</option>\r\n      </select>\r\n      </div>\r\n      \r\n      \r\n      <button onClick={handleButtonClick}>Submit</button>\r\n      {showTextBox && (\r\n      <div style={{ color: \"black\", marginLeft: \"0px\", marginTop: \"10px\", width: \"25%\", background: \"#d3d3d3\", border: \"2px solid black\", padding: \"10px\" }}>{outputValue}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default TrackingRedirect;\r\n","C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\tracking\\trackingUPS.js",["185"],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\pages\\cash.js",["186","187","188","189","190","191","192","193"],[],"C:\\Users\\Josh\\Documents\\Gitbub\\Project\\frontend\\src\\components\\addressVerification\\addressVerifyUPS.js",["194","195","196","197","198"],[],{"ruleId":"199","severity":1,"message":"200","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"203","line":23,"column":10,"nodeType":"201","messageId":"202","endLine":23,"endColumn":18},{"ruleId":"199","severity":1,"message":"204","line":36,"column":11,"nodeType":"201","messageId":"202","endLine":36,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":58,"column":6,"nodeType":"207","endLine":58,"endColumn":14,"suggestions":"208"},{"ruleId":"199","severity":1,"message":"209","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"210","line":5,"column":18,"nodeType":"201","messageId":"202","endLine":5,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":11,"column":17,"nodeType":"213","endLine":11,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":13,"column":25,"nodeType":"213","endLine":13,"endColumn":77},{"ruleId":"211","severity":1,"message":"212","line":17,"column":17,"nodeType":"213","endLine":17,"endColumn":74},{"ruleId":"211","severity":1,"message":"212","line":49,"column":13,"nodeType":"213","endLine":49,"endColumn":71},{"ruleId":"211","severity":1,"message":"212","line":50,"column":13,"nodeType":"213","endLine":50,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":57,"column":9,"nodeType":"213","endLine":57,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":62,"column":21,"nodeType":"213","endLine":62,"endColumn":97},{"ruleId":"216","severity":1,"message":"217","line":62,"column":65,"nodeType":"218","messageId":"219","endLine":62,"endColumn":96},{"ruleId":"211","severity":1,"message":"212","line":64,"column":21,"nodeType":"213","endLine":64,"endColumn":84},{"ruleId":"211","severity":1,"message":"212","line":66,"column":29,"nodeType":"213","endLine":66,"endColumn":67},{"ruleId":"211","severity":1,"message":"212","line":67,"column":29,"nodeType":"213","endLine":67,"endColumn":67},{"ruleId":"211","severity":1,"message":"212","line":68,"column":29,"nodeType":"213","endLine":68,"endColumn":67},{"ruleId":"211","severity":1,"message":"212","line":75,"column":29,"nodeType":"213","endLine":75,"endColumn":85},{"ruleId":"211","severity":1,"message":"212","line":88,"column":25,"nodeType":"213","endLine":88,"endColumn":88},{"ruleId":"211","severity":1,"message":"212","line":93,"column":37,"nodeType":"213","endLine":93,"endColumn":68},{"ruleId":"211","severity":1,"message":"212","line":94,"column":37,"nodeType":"213","endLine":94,"endColumn":49},{"ruleId":"220","severity":1,"message":"221","line":103,"column":41,"nodeType":"213","endLine":103,"endColumn":140},{"ruleId":"220","severity":1,"message":"221","line":115,"column":41,"nodeType":"213","endLine":115,"endColumn":140},{"ruleId":"220","severity":1,"message":"221","line":124,"column":41,"nodeType":"213","endLine":124,"endColumn":140},{"ruleId":"211","severity":1,"message":"212","line":133,"column":33,"nodeType":"213","endLine":133,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":140,"column":25,"nodeType":"213","endLine":140,"endColumn":88},{"ruleId":"220","severity":1,"message":"221","line":145,"column":33,"nodeType":"213","endLine":145,"endColumn":125},{"ruleId":"211","severity":1,"message":"212","line":152,"column":37,"nodeType":"213","endLine":152,"endColumn":75},{"ruleId":"211","severity":1,"message":"212","line":153,"column":37,"nodeType":"213","endLine":153,"endColumn":75},{"ruleId":"211","severity":1,"message":"212","line":154,"column":37,"nodeType":"213","endLine":154,"endColumn":75},{"ruleId":"199","severity":1,"message":"222","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"223","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"224","line":10,"column":10,"nodeType":"201","messageId":"202","endLine":10,"endColumn":14},{"ruleId":"199","severity":1,"message":"225","line":10,"column":16,"nodeType":"201","messageId":"202","endLine":10,"endColumn":23},{"ruleId":"199","severity":1,"message":"226","line":13,"column":10,"nodeType":"201","messageId":"202","endLine":13,"endColumn":20},{"ruleId":"199","severity":1,"message":"227","line":13,"column":22,"nodeType":"201","messageId":"202","endLine":13,"endColumn":35},{"ruleId":"199","severity":1,"message":"228","line":15,"column":10,"nodeType":"201","messageId":"202","endLine":15,"endColumn":21},{"ruleId":"205","severity":1,"message":"229","line":38,"column":6,"nodeType":"207","endLine":38,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":58,"column":31,"nodeType":"233","messageId":"234","endLine":58,"endColumn":33},{"ruleId":"231","severity":1,"message":"232","line":61,"column":33,"nodeType":"233","messageId":"234","endLine":61,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":65,"column":43,"nodeType":"233","messageId":"234","endLine":65,"endColumn":45},{"ruleId":"235","severity":1,"message":"236","line":78,"column":25,"nodeType":"237","messageId":"238","endLine":78,"endColumn":27},{"ruleId":"231","severity":1,"message":"239","line":79,"column":54,"nodeType":"233","messageId":"234","endLine":79,"endColumn":56},{"ruleId":"199","severity":1,"message":"240","line":91,"column":9,"nodeType":"201","messageId":"202","endLine":91,"endColumn":21},{"ruleId":"199","severity":1,"message":"241","line":106,"column":9,"nodeType":"201","messageId":"202","endLine":106,"endColumn":21},{"ruleId":"199","severity":1,"message":"242","line":158,"column":12,"nodeType":"201","messageId":"202","endLine":158,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":32,"column":34,"nodeType":"237","messageId":"238","endLine":32,"endColumn":36},{"ruleId":"205","severity":1,"message":"243","line":38,"column":6,"nodeType":"207","endLine":38,"endColumn":8,"suggestions":"244"},{"ruleId":"199","severity":1,"message":"241","line":57,"column":9,"nodeType":"201","messageId":"202","endLine":57,"endColumn":21},{"ruleId":"199","severity":1,"message":"245","line":112,"column":12,"nodeType":"201","messageId":"202","endLine":112,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":30,"column":28,"nodeType":"237","messageId":"238","endLine":30,"endColumn":30},{"ruleId":"205","severity":1,"message":"246","line":36,"column":6,"nodeType":"207","endLine":36,"endColumn":8,"suggestions":"247"},{"ruleId":"199","severity":1,"message":"241","line":52,"column":9,"nodeType":"201","messageId":"202","endLine":52,"endColumn":21},{"ruleId":"199","severity":1,"message":"248","line":104,"column":12,"nodeType":"201","messageId":"202","endLine":104,"endColumn":20},{"ruleId":"199","severity":1,"message":"222","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"223","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":1,"column":36,"nodeType":"201","messageId":"202","endLine":1,"endColumn":44},{"ruleId":"199","severity":1,"message":"249","line":6,"column":12,"nodeType":"201","messageId":"202","endLine":6,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":32,"column":34,"nodeType":"237","messageId":"238","endLine":32,"endColumn":36},{"ruleId":"205","severity":1,"message":"250","line":38,"column":14,"nodeType":"207","endLine":38,"endColumn":16,"suggestions":"251"},{"ruleId":"199","severity":1,"message":"240","line":39,"column":17,"nodeType":"201","messageId":"202","endLine":39,"endColumn":29},{"ruleId":"199","severity":1,"message":"222","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"223","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":1,"column":36,"nodeType":"201","messageId":"202","endLine":1,"endColumn":44},{"ruleId":"199","severity":1,"message":"249","line":6,"column":12,"nodeType":"201","messageId":"202","endLine":6,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":46,"column":36,"nodeType":"237","messageId":"238","endLine":46,"endColumn":38},{"ruleId":"205","severity":1,"message":"246","line":52,"column":14,"nodeType":"207","endLine":52,"endColumn":16,"suggestions":"252"},{"ruleId":"199","severity":1,"message":"240","line":53,"column":17,"nodeType":"201","messageId":"202","endLine":53,"endColumn":29},{"ruleId":"199","severity":1,"message":"253","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"254","line":12,"column":10,"nodeType":"201","messageId":"202","endLine":12,"endColumn":15},{"ruleId":"205","severity":1,"message":"229","line":36,"column":6,"nodeType":"207","endLine":36,"endColumn":8,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"232","line":61,"column":24,"nodeType":"233","messageId":"234","endLine":61,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":77,"column":20,"nodeType":"233","messageId":"234","endLine":77,"endColumn":22},{"ruleId":"231","severity":1,"message":"239","line":91,"column":32,"nodeType":"233","messageId":"234","endLine":91,"endColumn":34},{"ruleId":"199","severity":1,"message":"256","line":92,"column":13,"nodeType":"201","messageId":"202","endLine":92,"endColumn":18},{"ruleId":"199","severity":1,"message":"257","line":93,"column":13,"nodeType":"201","messageId":"202","endLine":93,"endColumn":20},{"ruleId":"199","severity":1,"message":"258","line":125,"column":9,"nodeType":"201","messageId":"202","endLine":125,"endColumn":14},{"ruleId":"231","severity":1,"message":"239","line":178,"column":26,"nodeType":"233","messageId":"234","endLine":178,"endColumn":28},{"ruleId":"231","severity":1,"message":"239","line":192,"column":25,"nodeType":"233","messageId":"234","endLine":192,"endColumn":27},{"ruleId":"199","severity":1,"message":"259","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"260","line":4,"column":7,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"199","severity":1,"message":"261","line":11,"column":7,"nodeType":"201","messageId":"202","endLine":11,"endColumn":24},{"ruleId":"199","severity":1,"message":"262","line":19,"column":10,"nodeType":"201","messageId":"202","endLine":19,"endColumn":20},{"ruleId":"199","severity":1,"message":"263","line":19,"column":22,"nodeType":"201","messageId":"202","endLine":19,"endColumn":35},{"ruleId":"231","severity":1,"message":"239","line":27,"column":23,"nodeType":"233","messageId":"234","endLine":27,"endColumn":25},{"ruleId":"231","severity":1,"message":"239","line":32,"column":28,"nodeType":"233","messageId":"234","endLine":32,"endColumn":30},{"ruleId":"214","severity":1,"message":"215","line":24,"column":7,"nodeType":"213","endLine":24,"endColumn":25},{"ruleId":"199","severity":1,"message":"222","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":1,"column":36,"nodeType":"201","messageId":"202","endLine":1,"endColumn":44},{"ruleId":"205","severity":1,"message":"229","line":22,"column":6,"nodeType":"207","endLine":22,"endColumn":8,"suggestions":"264"},{"ruleId":"231","severity":1,"message":"239","line":81,"column":15,"nodeType":"233","messageId":"234","endLine":81,"endColumn":17},{"ruleId":"231","severity":1,"message":"239","line":106,"column":29,"nodeType":"233","messageId":"234","endLine":106,"endColumn":31},{"ruleId":"231","severity":1,"message":"239","line":123,"column":24,"nodeType":"233","messageId":"234","endLine":123,"endColumn":26},{"ruleId":"199","severity":1,"message":"265","line":145,"column":9,"nodeType":"201","messageId":"202","endLine":145,"endColumn":14},{"ruleId":"199","severity":1,"message":"266","line":146,"column":9,"nodeType":"201","messageId":"202","endLine":146,"endColumn":12},{"ruleId":"231","severity":1,"message":"239","line":32,"column":18,"nodeType":"233","messageId":"234","endLine":32,"endColumn":20},{"ruleId":"231","severity":1,"message":"239","line":34,"column":18,"nodeType":"233","messageId":"234","endLine":34,"endColumn":20},{"ruleId":"231","severity":1,"message":"239","line":36,"column":18,"nodeType":"233","messageId":"234","endLine":36,"endColumn":20},{"ruleId":"231","severity":1,"message":"239","line":38,"column":18,"nodeType":"233","messageId":"234","endLine":38,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":48,"column":11,"nodeType":"213","endLine":48,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setToken' is defined but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'stop'. Either include them or remove the dependency array.","ArrayExpression",["267"],"'isOpen' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'cost' is assigned a value but never used.","'setCost' is assigned a value but never used.","'supplierId' is assigned a value but never used.","'setSupplierId' is assigned a value but never used.","'classifyArr' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'listItem'. Either include it or remove the dependency array.",["268"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","'inputChanged' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'getItem' is defined but never used.","React Hook React.useEffect has a missing dependency: 'suppliers'. Either include it or remove the dependency array.",["269"],"'getSupplier' is defined but never used.","React Hook React.useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["270"],"'getOrder' is defined but never used.","'loading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["271"],["272"],"'AppCss' is defined but never used.","'Check' is assigned a value but never used.",["273"],"'count' is assigned a value but never used.","'itemStr' is assigned a value but never used.","'print' is assigned a value but never used.","'axios' is defined but never used.","'outputBoxStyles' is assigned a value but never used.","'closeButtonStyles' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.",["274"],"'start' is assigned a value but never used.","'end' is assigned a value but never used.",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"281","fix":"285"},{"desc":"277","fix":"286"},{"desc":"277","fix":"287"},"Update the dependencies array to be: [active, callback, stop]",{"range":"288","text":"289"},"Update the dependencies array to be: [listItem]",{"range":"290","text":"291"},"Update the dependencies array to be: [suppliers]",{"range":"292","text":"293"},"Update the dependencies array to be: [orders]",{"range":"294","text":"295"},"Update the dependencies array to be: [items]",{"range":"296","text":"297"},{"range":"298","text":"295"},{"range":"299","text":"291"},{"range":"300","text":"291"},[1414,1422],"[active, callback, stop]",[1238,1240],"[listItem]",[972,974],"[suppliers]",[907,909],"[orders]",[1252,1254],"[items]",[1976,1978],[1047,1049],[678,680]]